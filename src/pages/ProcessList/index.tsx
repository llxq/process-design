import type { IFormData } from '@/pages/ProcessList/components/AddAndEditProcess.tsx'import AddAndEditProcess from '@/pages/ProcessList/components/AddAndEditProcess.tsx'import { CreateUUID } from '@/utils'import { PlusOutlined } from '@ant-design/icons'import './index.scss'import type { TableProps } from 'antd'import { Button, Form, Input, Modal, Table } from 'antd'import { useRef, useState } from 'react'import { useNavigate } from 'react-router-dom'interface ISearch {    name: string}interface IData {    name: string    id: number}const ProcessList = () => {    const [data, setData] = useState([{ name: '测试', desc: '描述信息', id: CreateUUID() }])    const [pagination] = useState({        current: 1,        pageSize: 10,    })    const [modalParams, setModalParams] = useState<{ open: boolean, title: string }>({ open: false, title: '新增' })    const childRef = useRef<{ submit: () => Promise<IFormData> }>()    const [form] = Form.useForm<ISearch>()    const navigate = useNavigate()    const columns: TableProps<IData>['columns'] = [        {            title: '名称',            dataIndex: 'name',            key: 'name'        },        {            title: '描述',            dataIndex: 'desc',            key: 'desc'        },        {            title: '操作',            key: 'operation',            fixed: 'right',            width: 100,            render: () => (                <div className="flex-between">                    <Button type="link">编辑</Button>                    <Button type="link" danger>删除</Button>                </div>            ),            align: 'center'        }    ]    const openModal = (params?: { title: string, isEdit?: boolean }) => {        setModalParams({            open: true,            title: params?.isEdit ? '编辑' : '新增'        })    }    const closeModal = () => setModalParams({ ...modalParams, open: false })    const addProcess = () => {        childRef.current?.submit().then(formData => {            setData(data => [...data, {                ...formData,                id: CreateUUID(),            }])            closeModal()            navigate('/design')        })    }    return (        <div className="process-list__container">            <div className="process-list__search">                <Form form={ form } layout="inline">                    <Form.Item name="name" label="名称">                        <Input placeholder="请输入名称" />                    </Form.Item>                    <Form.Item>                        <Button type="primary">查询</Button>                    </Form.Item>                </Form>            </div>            <div className="process-list__add">                <Button type="primary" icon={ <PlusOutlined /> }                        onClick={ () => openModal({ title: '新增' }) }>添加</Button>            </div>            <div className="process-list__table">                <Table dataSource={ data } columns={ columns } pagination={ pagination } size="small" bordered                       rowKey="id"></Table>            </div>            <Modal { ...modalParams } onCancel={ closeModal } onOk={ addProcess }>                <AddAndEditProcess ref={ childRef }></AddAndEditProcess>            </Modal>        </div>    )}export default ProcessList