import { Process } from '@/pages/ProcessDesign/core/Process'import { ProcessNodeType } from '@/pages/ProcessDesign/core/Process/processConfig.ts'import { createResizeModelAndView } from '@/pages/ProcessDesign/core/Process/utils/registryCustomModel/utils.ts'import { HtmlResize } from '@logicflow/extension'import ReactDOM from 'react-dom/client'import styled from 'styled-components'const RemarkWrapper = styled.div`    background-color: #fff7ae;    width: 100%;    height: 100%;    border-radius: 6px;    position: relative;        .remark__triangle {        width: 16px;        height: 16px;        background-color: #fff;        position: absolute;        right: 0;    }        .remark__triangle::before {        content: "";        width: 0;        height: 0;        border-right: 16px solid transparent;        border-bottom: 16px solid #ddc776;        top: 0;        left: 0;        position: relative;        display: block;    }`const RemarkComponent = () => {    return (        <RemarkWrapper>            <div className="remark__triangle"></div>        </RemarkWrapper>    )}export const registryRemarkModel = (process: Process): void => {    const { view, model } = createResizeModelAndView(HtmlResize, ProcessNodeType.REMARK, process, (model, defaultConfig) => {        model.width = defaultConfig?.width || model.width        model.height = defaultConfig?.height || model.height    })    class RemarkView extends view {        public setHtml (rootEl: HTMLElement): void {            ReactDOM.createRoot(rootEl).render(<RemarkComponent />)        }    }    class RemarkModel extends model {        public getTextStyle(): IObj {            const textStyle = super.getTextStyle()            return {                ...textStyle,                ...{                    padding: '12px'                },            }        }    }    process.register({        type: ProcessNodeType.REMARK,        view: RemarkView,        model: RemarkModel    })}